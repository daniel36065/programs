package dn;


public class Operaciones {
	
	public void operaciones(){}
	/**
	 * 
	 * @param number1
	 * @param number2
	 * @return
	 */
	public int addition(int number1, int number2) 
	{
		
		return number1+number2;
				
	}
	/**
	 * 
	 * @param number1
	 * @param number2
	 * @return
	 */
	public int subtraction(int number1, int number2) 
	{
		
		return number1-number2;
	}
	/**
	 * 
	 * @param number1
	 * @param number2
	 * @return
	 */
	public int multiplication(int number1, int number2) 
	{
		
		return number1*number2;
	}
	/**
	 * 
	 * @param number1
	 * @param number2
	 * @return
	 */
	public double division(int number1, int number2) 
	{ 
		if(number2!=0){
			
		int res =number1/number2;
                return res;
                }else{
                  return Double.NaN;     
                }              
	}
	/**
	 * 
	 * @param number1
	 * @param number2
	 * @return
	 */
	public double residue(int number1, int number2) 
	{
		
		return number1%number2;
	}
		
	public int factorial(int number) 
	{
		if(number<1)
			return 1;
		else
			return number*factorial(number-1);
	}
	/**
	 * 
	 * @param base
	 * @param exponent
	 * @return
	 */
	public int exponentiation(int base, int exponent) 
	{
		if(exponent==1)
			return base;
		else
			if(exponent==0)
				return 1;
			else
				if(exponent>1)
					return multiplication(base, exponentiation(base,exponent-1));
				else
					return (1/exponentiation(base, multiplication(exponent,(-1))));
	}
	/**
	 * 
	 * @param x
	 * @return
	 */
	public double sin(int x)
	{
		double b = Math.toRadians(x);
		return Math.sin(b);
            
        }
	public double cos(int x)
	{
		double b = Math.toRadians(x);
		return Math.cos(b);	
	}
	public double integral (int initial_point,int final_point, double step_increment) 
	{
		double response = 0.0;
		double  temp;
		double x_i;
		double x_i_1;
		int y_i;
		x_i_1 = initial_point;
		x_i = step_increment + x_i_1;
		for(double i = x_i; i <= final_point; i+= step_increment)
		{
			y_i = (int) (Math.pow(x_i, 2));
			temp = (y_i)*(x_i-x_i_1);
			response += temp;	
			x_i_1=x_i;
			x_i = step_increment + x_i_1;
		}
			
			return response;
	}	        	         		
}
